@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!DOCTYPE html>



<h1>Yeni Kategori Ekleme Sayfası</h1>
</br>
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)


    <br />

    @Html.Label("Yazar Soyad")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)
    <br />

    @Html.Label("Yazar Resim Yolu")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />

    @Html.Label("Yazar Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />

    @Html.Label("Yazar Parola")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />

    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout )
    <button type="submit" class="btn btn-primary">Ekle</button>
</div>
}
